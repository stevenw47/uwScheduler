{"version":3,"sources":["components/common/types.ts","components/common/TextInput/TextInput.tsx","hooks/useCoursesInfo.ts","utils/numbers.ts","components/Scheduler/Calendar/CalendarDay/CalendarDay.tsx","components/Scheduler/Calendar/Calendar.tsx","components/common/CheckboxInput/CheckboxInput.tsx","components/Scheduler/Options/Options.tsx","constants/colors.ts","components/Scheduler/Scheduler.tsx","components/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Weekdays","WeekdaysAbbreviated","TextInput","leftIcon","onLeftIconClick","rightIcon","onRightIconClick","props","inputStyle","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","className","onClick","undefined","icon","style","type","timeByColonReg","processTime","timeByColon","match","exec","Number","Math","round","Error","weekdaysShortReg","processWeekdays","weekdaysShort","processCourseInfo","courseInfo","length","instructorsCommaArray","subject","catalog_number","title","note","processedClasses","course","classes","class_number","section","date","location","instructors","push","classNumber","startTime","start_time","endTime","end_time","weekdays","map","instructorComma","split","reverse","join","catalogNumber","sections","courseReg","backendUrl","process","isBetween","num","left","right","leftClosed","rightClosed","result","numOverlap","_class","count","c","CalendarDay","day","even","colors","timeBlocks","colorClass","key","index","top","START_TIME","filter","indexOf","overlapOrder","width","height","background","timeBlock","addDividers","reactNodes","dividedReactNodes","entries","reactNode","Calendar","classesInfo","classesEnabledFlags","classesColors","classesByWeekday","Monday","Tuesday","Wednesday","Thursday","Friday","i","classInfo","weekday","Object","values","hour","floor","minute","formattedStartTime","CheckboxInput","labelText","checkboxColor","color","checked","border","Options","coursesInfo","setClassEnabled","classIndex","currentClassIndex","onChange","event","canadianColorPalette","colorPalette","all","dark","slice","light","Scheduler","coursesList","term","courseNames","useState","setCoursesInfo","useEffect","getCourseInfo","courseName","a","fetch","res","json","resJson","data","newCoursesInfo","courseInfoWithoutTST","x","includes","fetchData","useCoursesInfo","setClassesInfo","setClassesEnabledFlags","setClassesColors","courseIndex","courseInfoWithoutSections","enabled","newClassesEnabledFlags","Home","coursesInputString","setCoursesInputString","termInputString","setTermInputString","setCoursesList","setTerm","updateCoursesListAndTerm","useCallback","replace","handleCoursesChange","target","value","handleCoursesKeyPress","handleTermChange","autoFocus","placeholder","onKeyPress","faCalendarAlt","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3939ba8.chunk.js","sourcesContent":["export enum Weekdays {\n  Monday = 'Monday',\n  Tuesday = 'Tuesday',\n  Wednesday = 'Wednesday',\n  Thursday = 'Thursday',\n  Friday = 'Friday',\n}\nexport enum WeekdaysAbbreviated {\n  Monday = 'M',\n  Tuesday = 'T',\n  Wednesday = 'W',\n  Thursday = 'Th',\n  Friday = 'F',\n}\n\n// this is the shape of the returned data, after fetching from the API\nexport interface CourseInfo {\n  subject: string;\n  catalogNumber: string;\n  title: string;\n  note: string | null;\n  sections: SectionInfo[];\n}\nexport interface SectionInfo {\n  classNumber: number;\n  section: string;\n  date: {\n    startTime: number;\n    endTime: number;\n    weekdays: WeekdaysAbbreviated[];\n  };\n  location: string;\n  instructors: string;\n}\n\n// for a single course (KOREA101R) , it has a list of sections associated to it (LEC001, LEC002, TUT101, TUT102, TUT103)\n// if we take only a single section from it, we get a class\nexport interface ClassInfo extends Omit<CourseInfo, 'sections'> {\n  section: SectionInfo;\n}\n","import React, { FunctionComponent, InputHTMLAttributes } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport './TextInput.scss';\n\ninterface TextInputProps\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  leftIcon?: IconDefinition;\n  onLeftIconClick?: () => void;\n  rightIcon?: IconDefinition;\n  onRightIconClick?: () => void;\n}\n\nexport const TextInput: FunctionComponent<TextInputProps> = ({\n  leftIcon,\n  onLeftIconClick,\n  rightIcon,\n  onRightIconClick,\n  ...props\n}) => {\n  const inputStyle = {\n    borderTopLeftRadius: leftIcon ? 0 : '4px',\n    borderBottomLeftRadius: leftIcon ? 0 : '4px',\n    borderTopRightRadius: rightIcon ? 0 : '4px',\n    borderBottomRightRadius: rightIcon ? 0 : '4px',\n  };\n  return (\n    <div className=\"uw-scheduler-field\">\n      {leftIcon ? (\n        <button\n          className=\"uw-scheduler-text-input-left-button\"\n          onClick={onLeftIconClick ?? undefined}\n        >\n          <FontAwesomeIcon icon={leftIcon} />\n        </button>\n      ) : null}\n      <input\n        style={inputStyle}\n        className=\"uw-scheduler-text-input\"\n        type=\"text\"\n        {...props}\n      />\n      {rightIcon ? (\n        <button\n          className=\"uw-scheduler-text-input-right-button\"\n          onClick={onRightIconClick ?? undefined}\n        >\n          <FontAwesomeIcon icon={rightIcon} />\n        </button>\n      ) : null}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { CourseInfo, WeekdaysAbbreviated } from 'components/common/types';\n\nconst timeByColonReg = /(\\d\\d):(\\d\\d)/;\n\n// time is like XX:XX, 24 hour time\nconst processTime = (timeByColon: string) => {\n  const match = timeByColonReg.exec(timeByColon);\n  if (match) {\n    const hour = Number(match[1]);\n    const minute = Math.round((Number(match[2]) / 60) * 100);\n    return hour + minute / 100;\n  }\n  throw Error(`Invalid timeByColon ${timeByColon}`);\n};\n\nconst weekdaysShortReg = /([A-Z][a-z]?)/g;\n\n// weekdaysShort is like 'TTh'\nconst processWeekdays = (weekdaysShort: string) => {\n  const match = weekdaysShort.match(weekdaysShortReg);\n  if (match) {\n    return match;\n  }\n  throw Error(`Invalid weekdaysShort ${weekdaysShort}`);\n};\n\nconst processInstructors = (instructorsCommaArray: string[]) => {\n  return instructorsCommaArray\n    .map(instructorComma =>\n      instructorComma\n        .split(',')\n        .reverse()\n        .join(' '),\n    )\n    .join(', ');\n};\n\n// courseInfo is from the uwaterloo api\n// TODO: the variables are named badly...\n// const processCourseInfo = (courseInfo: courseInfoType): CourseInfo => {\nconst processCourseInfo = (courseInfo: any): CourseInfo => {\n  if (!courseInfo.length) {\n    throw Error(`Expected ${courseInfo} to be an array of size at least 1.`);\n  }\n\n  // TODO:\n  // these should be the same for each course\n  // we can check and if not, do some error\n  const { subject, catalog_number, title, note } = courseInfo[0];\n\n  const processedClasses = [];\n\n  for (const course of courseInfo) {\n    if (course.classes.length !== 1) {\n      throw Error(`Expected ${course.classes} to be an array of size 1.`);\n    }\n\n    const { class_number, section } = course;\n\n    const classes = course.classes[0];\n\n    const { date, location, instructors } = classes;\n\n    processedClasses.push({\n      classNumber: class_number,\n      section,\n      date: {\n        startTime: processTime(date.start_time),\n        endTime: processTime(date.end_time),\n        weekdays: processWeekdays(date.weekdays) as WeekdaysAbbreviated[],\n      },\n      location,\n      instructors: processInstructors(instructors),\n    });\n  }\n\n  return {\n    subject,\n    catalogNumber: catalog_number,\n    title,\n    note,\n    sections: processedClasses,\n  };\n};\n\nconst courseReg = /([a-z]+)([\\d].+)/i;\n\nconst backendUrl = process.env.REACT_APP_BACKEND_URL ?? 'http://localhost:5000';\n\n// TODO: use type for courseNames\nexport const useCoursesInfo = (term: number, courseNames: string[]) => {\n  // http://www.adm.uwaterloo.ca/cgi-bin/cgiwrap/infocour/salook.pl?level=under&sess=1205&subject=CO&cournum=454\n\n  const [coursesInfo, setCoursesInfo] = useState<any[] | null>(null);\n\n  useEffect(() => {\n    // TODO: handle errors in these things\n\n    const getCourseInfo = async (courseName: string) => {\n      const match = courseReg.exec(courseName);\n\n      if (match) {\n        const subject = match[1];\n        const catalogNumber = match[2];\n        const res = await fetch(\n          `${backendUrl}/course?term=${term}&subject=${subject}&catalogNumber=${catalogNumber}`,\n        );\n        const resJson = await res.json();\n        const data = resJson.data;\n        return data;\n      }\n      throw Error(`Invalid courseName ${courseName}`);\n    };\n\n    async function fetchData() {\n      const newCoursesInfo = [];\n      for (const courseName of courseNames) {\n        const courseInfo = await getCourseInfo(courseName);\n        // filter out TST\n        const courseInfoWithoutTST = courseInfo.filter(\n          (x: any) => !x.section.includes('TST'),\n        );\n        newCoursesInfo.push(processCourseInfo(courseInfoWithoutTST));\n      }\n      setCoursesInfo(newCoursesInfo);\n    }\n    fetchData();\n  }, [term, courseNames]);\n\n  return coursesInfo;\n};\n\nlet temp = [\n  [\n    {\n      subject: 'CO',\n      catalog_number: '342',\n      units: 0.5,\n      title: 'Introduction to Graph Theory',\n      note: null,\n      class_number: 3641,\n      section: 'LEC 001',\n      campus: 'UW U',\n      associated_class: 1,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 75,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '10:00',\n            end_time: '11:20',\n            weekdays: 'TTh',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'PHY',\n            room: '313',\n          },\n          instructors: ['Haxell,Penny'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:11-05:00',\n    },\n  ],\n  [\n    {\n      subject: 'CO',\n      catalog_number: '351',\n      units: 0.5,\n      title: 'Network Flow Theory',\n      note: null,\n      class_number: 3642,\n      section: 'LEC 001',\n      campus: 'UW U',\n      associated_class: 1,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 75,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '11:30',\n            end_time: '12:20',\n            weekdays: 'MWF',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'MC',\n            room: '2038',\n          },\n          instructors: ['Pei,Martin'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:11-05:00',\n    },\n  ],\n  [\n    {\n      subject: 'CO',\n      catalog_number: '454',\n      units: 0.5,\n      title: 'Scheduling',\n      note: null,\n      class_number: 3643,\n      section: 'LEC 001',\n      campus: 'UW U',\n      associated_class: 1,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 45,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '10:00',\n            end_time: '11:20',\n            weekdays: 'MW',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'MC',\n            room: '4064',\n          },\n          instructors: ['Cheriyan,Joseph'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:11-05:00',\n    },\n  ],\n  [\n    {\n      subject: 'PMATH',\n      catalog_number: '336',\n      units: 0.5,\n      title: 'Introduction to Group Theory with Applications',\n      note: null,\n      class_number: 3627,\n      section: 'LEC 001',\n      campus: 'UW U',\n      associated_class: 1,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 45,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '08:30',\n            end_time: '09:20',\n            weekdays: 'MWF',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'MC',\n            room: '4021',\n          },\n          instructors: ['Madill,Blake'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:43-05:00',\n    },\n  ],\n  [\n    {\n      subject: 'CS',\n      catalog_number: '466',\n      units: 0.5,\n      title: 'Algorithm Design and Analysis',\n      note: null,\n      class_number: 3659,\n      section: 'LEC 001',\n      campus: 'UW U',\n      associated_class: 1,\n      related_component_1: '101',\n      related_component_2: null,\n      enrollment_capacity: 60,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '11:30',\n            end_time: '12:50',\n            weekdays: 'MW',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'RCH',\n            room: '308',\n          },\n          instructors: ['Lau,Lap Chi'],\n        },\n      ],\n      held_with: ['CS 666'],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:18-05:00',\n    },\n    {\n      subject: 'CS',\n      catalog_number: '466',\n      units: 0.5,\n      title: 'Algorithm Design and Analysis',\n      note: null,\n      class_number: 5365,\n      section: 'LEC 002',\n      campus: 'UW U',\n      associated_class: 2,\n      related_component_1: '101',\n      related_component_2: null,\n      enrollment_capacity: 60,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '13:00',\n            end_time: '14:20',\n            weekdays: 'MW',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'RCH',\n            room: '308',\n          },\n          instructors: ['Lau,Lap Chi'],\n        },\n      ],\n      held_with: ['CS 666'],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:18-05:00',\n    },\n    {\n      subject: 'CS',\n      catalog_number: '466',\n      units: 0.5,\n      title: 'Algorithm Design and Analysis',\n      note: null,\n      class_number: 4079,\n      section: 'TST 101',\n      campus: 'UW U',\n      associated_class: 99,\n      related_component_1: '99',\n      related_component_2: null,\n      enrollment_capacity: 120,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '19:00',\n            end_time: '20:50',\n            weekdays: 'W',\n            start_date: '06/17',\n            end_date: '06/17',\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: null,\n            room: null,\n          },\n          instructors: [],\n        },\n      ],\n      held_with: ['CS 666'],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:09:18-05:00',\n    },\n  ],\n  [\n    {\n      subject: 'KOREA',\n      catalog_number: '101R',\n      units: 0.5,\n      title: 'First-Year Korean 1',\n      note: 'Choose TUT section for Related 1.',\n      class_number: 4117,\n      section: 'LEC 001',\n      campus: 'REN R',\n      associated_class: 1,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 45,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '13:00',\n            end_time: '14:20',\n            weekdays: 'W',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'REN',\n            room: '2107',\n          },\n          instructors: ['Kim,Young Gon'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:03-05:00',\n    },\n    {\n      subject: 'KOREA',\n      catalog_number: '101R',\n      units: 0.5,\n      title: 'First-Year Korean 1',\n      note: 'Choose TUT section for Related 1.',\n      class_number: 4132,\n      section: 'LEC 002',\n      campus: 'REN R',\n      associated_class: 2,\n      related_component_1: null,\n      related_component_2: null,\n      enrollment_capacity: 45,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '14:30',\n            end_time: '15:50',\n            weekdays: 'W',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'REN',\n            room: '2107',\n          },\n          instructors: ['Kim,Young Gon'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:03-05:00',\n    },\n    {\n      subject: 'KOREA',\n      catalog_number: '101R',\n      units: 0.5,\n      title: 'First-Year Korean 1',\n      note: 'Choose TUT section for Related 1.',\n      class_number: 4140,\n      section: 'TUT 101',\n      campus: 'REN R',\n      associated_class: 99,\n      related_component_1: '99',\n      related_component_2: null,\n      enrollment_capacity: 30,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '16:00',\n            end_time: '17:20',\n            weekdays: 'W',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'REN',\n            room: '2107',\n          },\n          instructors: ['Kang,Youngoak'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:03-05:00',\n    },\n    {\n      subject: 'KOREA',\n      catalog_number: '101R',\n      units: 0.5,\n      title: 'First-Year Korean 1',\n      note: 'Choose TUT section for Related 1.',\n      class_number: 4141,\n      section: 'TUT 102',\n      campus: 'REN R',\n      associated_class: 99,\n      related_component_1: '99',\n      related_component_2: null,\n      enrollment_capacity: 30,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '16:00',\n            end_time: '17:20',\n            weekdays: 'W',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'REN',\n            room: '2102',\n          },\n          instructors: ['Cho,Grace'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:03-05:00',\n    },\n    {\n      subject: 'KOREA',\n      catalog_number: '101R',\n      units: 0.5,\n      title: 'First-Year Korean 1',\n      note: 'Choose TUT section for Related 1.',\n      class_number: 4142,\n      section: 'TUT 103',\n      campus: 'REN R',\n      associated_class: 99,\n      related_component_1: '99',\n      related_component_2: null,\n      enrollment_capacity: 30,\n      enrollment_total: 0,\n      waiting_capacity: 0,\n      waiting_total: 0,\n      topic: null,\n      reserves: [],\n      classes: [\n        {\n          date: {\n            start_time: '18:00',\n            end_time: '19:20',\n            weekdays: 'W',\n            start_date: null,\n            end_date: null,\n            is_tba: false,\n            is_cancelled: false,\n            is_closed: false,\n          },\n          location: {\n            building: 'REN',\n            room: '2102',\n          },\n          instructors: ['Kim,Wonhee'],\n        },\n      ],\n      held_with: [],\n      term: 1205,\n      academic_level: 'undergraduate',\n      last_updated: '2020-03-07T02:10:03-05:00',\n    },\n  ],\n];\n\ntype courseInfoType = typeof temp[0];\n","// checks if num is between left and right (with optional boundary conditions)\nexport const isBetween = (\n  num: number,\n  left: number,\n  right: number,\n  leftClosed = true,\n  rightClosed = true,\n) => {\n  let result = true;\n  if (leftClosed) {\n    result = result && left <= num;\n  } else {\n    result = result && left < num;\n  }\n  if (rightClosed) {\n    result = result && num <= right;\n  } else {\n    result = result && num < right;\n  }\n  return result;\n};\n","import React, { FunctionComponent } from 'react';\nimport './CalendarDay.scss';\nimport { isBetween } from 'utils/numbers';\nimport { Weekdays, ClassInfo } from 'components/common/types';\nimport { timeBlocks, START_TIME } from '../Calendar';\n\ninterface CalendarDayProps {\n  day: Weekdays;\n  even: boolean;\n  classes: ClassInfo[];\n  colors: string[];\n}\n\nconst overlapOrder = (classes: ClassInfo[], _class: ClassInfo) => {\n  const { startTime, endTime } = _class.section.date;\n\n  classes = classes.filter(\n    c =>\n      isBetween(startTime, c.section.date.startTime, c.section.date.endTime) ||\n      isBetween(endTime, c.section.date.startTime, c.section.date.endTime),\n  );\n  return classes.indexOf(_class);\n};\n\nconst numOverlap = (classes: ClassInfo[], _class: ClassInfo) => {\n  const { startTime, endTime } = _class.section.date;\n  let count = 0;\n  for (const c of classes) {\n    // c.date.startTime < startTime < c.date.endTime\n    if (\n      isBetween(startTime, c.section.date.startTime, c.section.date.endTime) ||\n      isBetween(endTime, c.section.date.startTime, c.section.date.endTime)\n    ) {\n      ++count;\n    }\n  }\n  return count;\n};\n\nexport const CalendarDay: FunctionComponent<CalendarDayProps> = ({\n  day,\n  even,\n  classes,\n  colors,\n}) => {\n  return (\n    <div className=\"calendar-day\">\n      <div className=\"calendar-day-underlay-container\">\n        {timeBlocks.map(({ startTime, endTime }) => {\n          const colorClass =\n            startTime % 1 === 0 ? (even ? 'light-grey' : 'white') : 'dark-grey';\n\n          return (\n            <div\n              key={`${startTime}-${endTime}`}\n              className={`calendar-day-underlay ${colorClass}`}\n            />\n          );\n        })}\n      </div>\n      <div className=\"calendar-day-class-container\">\n        {classes.map((_class: ClassInfo, index: number) => {\n          const section = _class.section;\n          const top = `${(section.date.startTime - START_TIME) * 2 * 25}px`;\n          const left = `${overlapOrder(classes, _class) *\n            (100 / numOverlap(classes, _class))}%`;\n          const width = `${100 / numOverlap(classes, _class)}%`;\n          const height = `${(section.date.endTime - section.date.startTime) *\n            2 *\n            25}px`;\n          const style = {\n            top,\n            left,\n            width,\n            height,\n            background: colors[index],\n          };\n          return (\n            <div\n              className=\"calendar-day-class\"\n              key={section.classNumber}\n              style={style}\n            >\n              <span className=\"class-info\">\n                {`${_class.subject}${_class.catalogNumber}`}\n                <br />\n                {`${section.section}`}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport './Calendar.scss';\nimport { CalendarDay } from './CalendarDay/CalendarDay';\nimport {\n  WeekdaysAbbreviated,\n  Weekdays,\n  ClassInfo,\n} from 'components/common/types';\n\nexport const START_TIME = 8.5; // 8:30am\nexport const END_TIME = 21; // 9:00pm\nexport const INTERVAL_LENGTH = 0.5; // 30 minute intervals\n\ninterface TimeBlock {\n  startTime: number;\n  endTime: number;\n}\n\nexport const timeBlocks: TimeBlock[] = [];\n\nconst timeBlock = {\n  startTime: START_TIME,\n  endTime: START_TIME + INTERVAL_LENGTH,\n};\nwhile (timeBlock.endTime <= END_TIME) {\n  timeBlocks.push({ ...timeBlock });\n  timeBlock.startTime += INTERVAL_LENGTH;\n  timeBlock.endTime += INTERVAL_LENGTH;\n}\n\nconst addDividers = (reactNodes: ReactElement[]) => {\n  const dividedReactNodes = [];\n  if (reactNodes.length > 0) {\n    dividedReactNodes.push(\n      <div key={'divider-0'} className=\"calendar-day-divider\" />,\n    );\n  }\n  for (const [index, reactNode] of reactNodes.entries()) {\n    dividedReactNodes.push(reactNode);\n    dividedReactNodes.push(\n      <div key={`divider-${index + 1}`} className=\"calendar-day-divider\" />,\n    );\n  }\n  return dividedReactNodes;\n};\n\ninterface CalendarProps {\n  classesInfo: ClassInfo[];\n  classesEnabledFlags: boolean[];\n  classesColors: string[]; // TODO: i should type this as Color or something\n}\n\nexport const Calendar: FunctionComponent<CalendarProps> = ({\n  classesInfo,\n  classesEnabledFlags,\n  classesColors,\n}) => {\n  const classesByWeekday: {\n    [key in WeekdaysAbbreviated]: {\n      classesInfo: ClassInfo[];\n      colors: string[];\n    };\n  } = {\n    [WeekdaysAbbreviated.Monday]: { classesInfo: [], colors: [] },\n    [WeekdaysAbbreviated.Tuesday]: { classesInfo: [], colors: [] },\n    [WeekdaysAbbreviated.Wednesday]: { classesInfo: [], colors: [] },\n    [WeekdaysAbbreviated.Thursday]: { classesInfo: [], colors: [] },\n    [WeekdaysAbbreviated.Friday]: { classesInfo: [], colors: [] },\n  };\n\n  // next, sort them into their bucket by weekday\n  for (let i = 0; i < classesInfo.length; ++i) {\n    const classInfo = classesInfo[i];\n    if (classesEnabledFlags[i]) {\n      for (const weekday of classInfo.section.date.weekdays) {\n        classesByWeekday[weekday].classesInfo.push(classInfo);\n        classesByWeekday[weekday].colors.push(classesColors[i]);\n      }\n    }\n  }\n\n  const style = {\n    height: `calc(25px * 25)`,\n  };\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar-heading-container\">\n        <div className=\"calendar-heading-time-container\" />\n        <div className=\"calendar-heading-day-container\">\n          {addDividers(\n            Object.values(Weekdays).map((day, index) => {\n              return (\n                <div key={day} className=\"calendar-heading-day\">\n                  <span className=\"calendar-heading-day-text\">{day}</span>\n                </div>\n              );\n            }),\n          )}\n        </div>\n      </div>\n      <div className=\"calendar-body-container\" style={style}>\n        <div className=\"calendar-time-container\">\n          {timeBlocks.map(({ startTime, endTime }) => {\n            const hour = Math.floor(startTime / 1);\n            const minute = startTime % 1 !== 0 ? (startTime % 1) * 60 : '00';\n            const formattedStartTime =\n              hour <= 12\n                ? `${hour}:${minute} ${hour < 12 ? 'AM' : 'PM'}`\n                : `${hour % 12}:${minute} PM`;\n            return (\n              <div key={startTime} className=\"calendar-time\">\n                <div className=\"calendar-time-tick\" />\n                <span className=\"calendar-time-text\">{formattedStartTime}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"calendar-day-container\">\n          {addDividers(\n            Object.values(Weekdays).map((day, index) => {\n              return (\n                <CalendarDay\n                  key={day}\n                  day={day}\n                  even={index % 2 === 0}\n                  classes={\n                    classesByWeekday[WeekdaysAbbreviated[day]].classesInfo\n                  }\n                  colors={classesByWeekday[WeekdaysAbbreviated[day]].colors}\n                />\n              );\n            }),\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, InputHTMLAttributes } from 'react';\nimport './CheckboxInput.scss';\n\n// TODO: not sure\ninterface CheckboxInput\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  labelText?: string;\n  checkboxColor?: string; // color\n}\n\nexport const CheckboxInput: FunctionComponent<CheckboxInput> = ({\n  labelText,\n  checkboxColor,\n  ...props\n}) => {\n  const color = checkboxColor ?? 'black';\n  const style = {\n    background: props.checked ? color : 'white',\n    border: `1px solid ${color}`,\n  };\n  return (\n    <div className=\"uw-scheduler-field\">\n      <label className=\"uw-scheduler-checkbox-wrapper\">\n        <input\n          className=\"uw-scheduler-checkbox-input\"\n          type=\"checkbox\"\n          {...props}\n        />\n        <span className=\"checkmark\" style={style} />\n      </label>\n      <span>{labelText ?? null}</span>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport './Options.scss';\nimport { CheckboxInput } from 'components/common/CheckboxInput/CheckboxInput';\nimport { CourseInfo } from 'components/common/types';\n\ninterface OptionsProps {\n  coursesInfo: CourseInfo[];\n  classesEnabledFlags: boolean[];\n  setClassEnabled: (classIndex: number, enabled: boolean) => void;\n  classesColors: string[];\n}\n\nexport const Options: FunctionComponent<OptionsProps> = ({\n  coursesInfo,\n  classesEnabledFlags,\n  setClassEnabled,\n  classesColors,\n}) => {\n  let classIndex = 0;\n  return (\n    <div className=\"options\">\n      {coursesInfo.map(courseInfo => {\n        return (\n          <div\n            key={`${courseInfo.subject}${courseInfo.catalogNumber}`}\n            className=\"options-course\"\n          >\n            <div className=\"options-course-title\">\n              <span className=\"options-course-title-text\">{`${courseInfo.subject}${courseInfo.catalogNumber}`}</span>\n            </div>\n            <div className=\"options-course-sections\">\n              {courseInfo.sections.map(section => {\n                const currentClassIndex = classIndex;\n                ++classIndex;\n                const handleChange = (\n                  event: React.ChangeEvent<HTMLInputElement>,\n                ) => {\n                  setClassEnabled(\n                    currentClassIndex,\n                    !classesEnabledFlags[currentClassIndex],\n                  );\n                };\n                return (\n                  <div key={section.classNumber}>\n                    <CheckboxInput\n                      checkboxColor={classesColors[currentClassIndex]}\n                      labelText={`${section.section} - ${section.instructors}`}\n                      checked={classesEnabledFlags[currentClassIndex]}\n                      onChange={handleChange}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","const canadianColorPalette = [\n  'rgb(255, 159, 243)',\n  'rgb(254, 202, 87)',\n  'rgb(255, 107, 107)',\n  'rgb(72, 219, 251)',\n  'rgb(29, 209, 161)',\n  'rgb(243, 104, 224)',\n  'rgb(255, 159, 67)',\n  'rgb(238, 82, 83)',\n  'rgb(10, 189, 227)',\n  'rgb(16, 172, 132)',\n  'rgb(0, 210, 211)',\n  'rgb(84, 160, 255)',\n  'rgb(95, 39, 205)',\n  'rgb(200, 214, 229)',\n  'rgb(87, 101, 116)',\n  'rgb(1, 163, 164)',\n  'rgb(46, 134, 222)',\n  'rgb(52, 31, 151)',\n  'rgb(131, 149, 167)',\n  'rgb(34, 47, 62)',\n];\n\n// palette is from https://flatuicolors.com/palette/ca\n// store div containing the colors as a global variable\n// copy([...temp1.children].map(x => x.style.background))\nexport const colorPalette = {\n  all: canadianColorPalette,\n  dark: [\n    ...canadianColorPalette.slice(5, 10),\n    ...canadianColorPalette.slice(15, 20),\n  ],\n  light: [\n    ...canadianColorPalette.slice(0, 5),\n    ...canadianColorPalette.slice(10, 15),\n  ],\n};\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useCoursesInfo } from 'hooks/useCoursesInfo';\nimport { Calendar } from './Calendar/Calendar';\nimport { ClassInfo } from 'components/common/types';\nimport { Options } from './Options/Options';\nimport { colorPalette } from 'constants/colors';\nimport './Scheduler.scss';\n\ntype CourseName = string;\n\ninterface SchedulerProps {\n  coursesList: CourseName[];\n  term: number;\n}\n\nexport const Scheduler: FunctionComponent<SchedulerProps> = ({\n  coursesList,\n  term,\n}) => {\n  // TODO: have input for term?\n  const coursesInfo = useCoursesInfo(term, coursesList);\n  // const coursesInfo = MOCK_DATA as any;\n\n  const [classesInfo, setClassesInfo] = useState<ClassInfo[] | null>(null);\n  const [classesEnabledFlags, setClassesEnabledFlags] = useState<\n    boolean[] | null\n  >(null);\n  const [classesColors, setClassesColors] = useState<string[] | null>(null);\n\n  useEffect(() => {\n    if (coursesInfo) {\n      const classesInfo: ClassInfo[] = [];\n      const classesEnabledFlags: boolean[] = [];\n      const classesColors: string[] = [];\n\n      // first, flatten coursesInfo into classesInfo\n      for (const [courseIndex, courseInfo] of coursesInfo.entries()) {\n        const { sections, ...courseInfoWithoutSections } = courseInfo;\n        for (const section of sections) {\n          classesInfo.push({\n            ...courseInfoWithoutSections,\n            section: section,\n          });\n          classesEnabledFlags.push(true);\n          classesColors.push(\n            colorPalette.light[courseIndex % colorPalette.light.length],\n          );\n        }\n      }\n      setClassesInfo(classesInfo);\n      setClassesEnabledFlags(classesEnabledFlags);\n      setClassesColors(classesColors);\n    }\n  }, [coursesInfo]);\n\n  const setClassEnabled = (classIndex: number, enabled: boolean) => {\n    if (classesEnabledFlags) {\n      const newClassesEnabledFlags = [...classesEnabledFlags];\n      newClassesEnabledFlags[classIndex] = enabled;\n      setClassesEnabledFlags(newClassesEnabledFlags);\n    }\n  };\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"calendar-wrapper\">\n        {classesInfo && classesEnabledFlags && classesColors ? (\n          <Calendar\n            classesInfo={classesInfo}\n            classesEnabledFlags={classesEnabledFlags}\n            classesColors={classesColors}\n          />\n        ) : null}\n      </div>\n      <div className=\"options-wrapper\">\n        {coursesInfo && classesEnabledFlags && classesColors ? (\n          <Options\n            coursesInfo={coursesInfo}\n            classesEnabledFlags={classesEnabledFlags}\n            setClassEnabled={setClassEnabled}\n            classesColors={classesColors}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst MOCK_DATA = [\n  {\n    subject: 'CS',\n    catalogNumber: '466',\n    title: 'Algorithm Design and Analysis',\n    note: null,\n    sections: [\n      {\n        classNumber: 3659,\n        section: 'LEC 001',\n        date: {\n          startTime: 11.5,\n          endTime: 12.83,\n          weekdays: ['M', 'W'],\n        },\n        location: {\n          building: 'RCH',\n          room: '308',\n        },\n        instructors: 'Lap Chi Lau',\n      },\n      {\n        classNumber: 5365,\n        section: 'LEC 002',\n        date: {\n          startTime: 13,\n          endTime: 14.33,\n          weekdays: ['M', 'W'],\n        },\n        location: {\n          building: 'RCH',\n          room: '308',\n        },\n        instructors: 'Lap Chi Lau',\n      },\n    ],\n  },\n  {\n    subject: 'CO',\n    catalogNumber: '342',\n    title: 'Introduction to Graph Theory',\n    note: null,\n    sections: [\n      {\n        classNumber: 3641,\n        section: 'LEC 001',\n        date: {\n          startTime: 10,\n          endTime: 11.33,\n          weekdays: ['T', 'Th'],\n        },\n        location: {\n          building: 'MC',\n          room: '2017',\n        },\n        instructors: 'Penny Haxell',\n      },\n    ],\n  },\n  {\n    subject: 'CO',\n    catalogNumber: '351',\n    title: 'Network Flow Theory',\n    note: null,\n    sections: [\n      {\n        classNumber: 3642,\n        section: 'LEC 001',\n        date: {\n          startTime: 11.5,\n          endTime: 12.33,\n          weekdays: ['M', 'W', 'F'],\n        },\n        location: {\n          building: 'MC',\n          room: '2038',\n        },\n        instructors: 'Martin Pei',\n      },\n    ],\n  },\n  {\n    subject: 'CO',\n    catalogNumber: '454',\n    title: 'Scheduling',\n    note: null,\n    sections: [\n      {\n        classNumber: 3643,\n        section: 'LEC 001',\n        date: {\n          startTime: 10,\n          endTime: 11.33,\n          weekdays: ['M', 'W'],\n        },\n        location: {\n          building: 'MC',\n          room: '4064',\n        },\n        instructors: 'Joseph Cheriyan',\n      },\n    ],\n  },\n  {\n    subject: 'PMATH',\n    catalogNumber: '336',\n    title: 'Introduction to Group Theory with Applications',\n    note: null,\n    sections: [\n      {\n        classNumber: 3627,\n        section: 'LEC 001',\n        date: {\n          startTime: 8.5,\n          endTime: 9.33,\n          weekdays: ['M', 'W', 'F'],\n        },\n        location: {\n          building: 'MC',\n          room: '4021',\n        },\n        instructors: 'Blake Madill',\n      },\n    ],\n  },\n  {\n    subject: 'KOREA',\n    catalogNumber: '101R',\n    title: 'First-Year Korean 1',\n    note: 'Choose TUT section for Related 1.',\n    sections: [\n      {\n        classNumber: 4117,\n        section: 'LEC 001',\n        date: {\n          startTime: 13,\n          endTime: 14.33,\n          weekdays: ['W'],\n        },\n        location: {\n          building: 'REN',\n          room: '2107',\n        },\n        instructors: 'Young Gon Kim',\n      },\n      {\n        classNumber: 4132,\n        section: 'LEC 002',\n        date: {\n          startTime: 14.5,\n          endTime: 15.83,\n          weekdays: ['W'],\n        },\n        location: {\n          building: 'REN',\n          room: '2107',\n        },\n        instructors: 'Young Gon Kim',\n      },\n      {\n        classNumber: 4140,\n        section: 'TUT 101',\n        date: {\n          startTime: 16,\n          endTime: 17.33,\n          weekdays: ['W'],\n        },\n        location: {\n          building: 'REN',\n          room: '2107',\n        },\n        instructors: 'Youngoak Kang',\n      },\n      {\n        classNumber: 4141,\n        section: 'TUT 102',\n        date: {\n          startTime: 16,\n          endTime: 17.33,\n          weekdays: ['W'],\n        },\n        location: {\n          building: 'REN',\n          room: '2102',\n        },\n        instructors: 'Grace Cho',\n      },\n      {\n        classNumber: 4142,\n        section: 'TUT 103',\n        date: {\n          startTime: 18,\n          endTime: 19.33,\n          weekdays: ['W'],\n        },\n        location: {\n          building: 'REN',\n          room: '2102',\n        },\n        instructors: 'Wonhee Kim',\n      },\n    ],\n  },\n];\n","import React, { FunctionComponent, useState, useCallback } from 'react';\nimport { TextInput } from 'components/common/TextInput/TextInput';\nimport './Home.scss';\nimport { Scheduler } from 'components/Scheduler/Scheduler';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\n\ninterface HomeProps {}\n\nexport const Home: FunctionComponent<HomeProps> = () => {\n  const [coursesInputString, setCoursesInputString] = useState(\n    'CS466, CO342, CO351, CO454, PMATH336, KOREA101R',\n  );\n  const [termInputString, setTermInputString] = useState('1205');\n\n  const [coursesList, setCoursesList] = useState<string[]>([]);\n  const [term, setTerm] = useState<number>();\n\n  const updateCoursesListAndTerm = useCallback(() => {\n    // TODO: some validation here?\n    setCoursesList(coursesInputString.replace(/\\s/g, '').split(','));\n    setTerm(Number(termInputString));\n  }, [coursesInputString, termInputString]);\n\n  const handleCoursesChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCoursesInputString(event.target.value);\n    },\n    [],\n  );\n  const handleCoursesKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        updateCoursesListAndTerm();\n      }\n    },\n    [updateCoursesListAndTerm],\n  );\n\n  const handleTermChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTermInputString(event.target.value);\n    },\n    [],\n  );\n\n  return (\n    <div className=\"home\">\n      <div className=\"title\">\n        <h1 className=\"title-text\">uwScheduler</h1>\n      </div>\n      <div className=\"search-bar\">\n        <div className=\"input-courses\">\n          <TextInput\n            value={coursesInputString}\n            autoFocus={true}\n            placeholder={'CS466, CO342, CO351, CO454, PMATH336, KOREA101R'}\n            onChange={handleCoursesChange}\n            onKeyPress={handleCoursesKeyPress}\n            rightIcon={faCalendarAlt}\n            onRightIconClick={updateCoursesListAndTerm}\n          />\n        </div>\n        <div className=\"input-term\">\n          <TextInput\n            value={termInputString}\n            placeholder={'1205'}\n            onChange={handleTermChange}\n          />\n        </div>\n      </div>\n      <div className=\"search-results\">\n        {coursesList.length && term ? (\n          <Scheduler coursesList={coursesList} term={term} />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { Home } from './components/Home/Home';\nimport './App.scss';\n\nconst App: FunctionComponent = () => {\n  return (\n    <div className=\"app\">\n      <Home />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}